project name is a Website Car_blogs
incase -> npm i :-for node_module


1) cmd>npx create-react-app app-name
2) cmd>cd app-name
3) cmd>npm i react-router-dom
4) cmd> npm react-boostrap5
5) cmd>npm i mdb-react-ui-kit
6) cmd>npm i @fortawesome/fontawesome-free

start from api
--> first time json-server install process
7)cmd-->npm install -g json-server
8)db.json file creted by root folder
	format {
    "user":[
        {
            "id":"1",
            "name":"shubham jadav",
            "email":"jadavshubham5@gmail.com",
            "password":"1234",
            "mobiel":"12345678901",
            "status":"unblock"
        },
        {
            "id":"2",
            "name":"sujal jadav",
            "email":"jadavsujal5@gmail.com",
            "password":"2345",
            "mobiel":"54345678901",
            "status":"unblock"
        }

    ],
    "contact":[
        {
            "id":"1",
            "name":"jay",
            "email":"jay@gmail.com",
            "comment":"hihk"
        },
        {
            "id":"2",
            "name":"shubham",
            "email":"shubham@gmail.com",
            "comment":"asdjhkughuk"
        }
    ],
    "admin":[
        {
            "id":"1",
            "name":"admin",
            "email":"admin@gmail.com",
            "password":"123456"
        }
    ],
    "employee":[
        {
            "id":"1",
            "name":"emp1",
            "email":"emap1@gmail.com",
            "password":"1234567",
            "mobile":7465343654,
            "status":"unblock"
        }
    ]
    
}
9) package.json in "server":"json-server --watch db.json --port 3000"
10) cmd -> npx json-server --watch db.json
11) cmd->npm install -save reacttostify
---> api fetch karva axios server use
12) cmd->npm i axios
loader pinner type use
13) cmd ->npm i react-toastify
app.js 
import { ToastContainer, toast } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";
<ToastContainer/>
---> this is a import of toastify code


this parth new add in blogs
 "blogs":[
    {
      "id": 1,
      "blogName":"my first car",
      "author":"shubham jadav",
      "content":"card is nice sadnuhuasdas asdasuidh",
      "image":"https://th.bing.com/th/id/OIP.Cg2HJ0znyLAvf-NN-gFSdwHaE7?w=264&h=180&c=7&r=0&o=5&cb=11&dpr=1.3&pid=1.7"
    },
    {
      "id": 2,
      "blogName":"my secnd car",
      "author":"sujal jadav",
      "content":"card is nice asdasuidh",
      "image":"https://th.bing.com/th/id/OIP.1p5Q1B6MQa8gTWCn6_ZObgAAAA?w=310&h=180&c=7&r=0&o=5&cb=11&dpr=1.3&pid=1.7"
    }

  ]


new path :- 
 Alogin :- 
const [fromvalue, setfromvalue] = useState({
        email: "",
        password: "",
    })

    const getFrom = (e) => {
        setfromvalue({ ...fromvalue, [e.target.name]: e.target.value });
        console.log(fromvalue)
    }

    const submithandle = async(e)=>{
        e.preventDefault();

        const {email,password} = fromvalue;

        if(!email.trim() || !password.trim()){
            console.error('email and password are required');
            return;
        }

        // match process
        try {
            const res = await axios.get(`http://localhost:3000/admin?email=${email}`)
            if(res.data.length === 0)
                {
                    console.error("Email does not Exits");
                    return
                }

                const user = res.data[0];
                if(user.password !== password)
                    {
                        console.error("incorrect Password")
                        return
                    }

                // session created 
                localStorage.setItem('userid',user.id);
                localStorage.setItem('uname',user.name);
                console.log("login succssfull")
		setfromvalue({
                    email:"",
                    password:""
                })
                redirect("/Dashboard")
        } catch (error) {
            console.error("Error during login:",error)
        }
    }

return(
	  <MDBInput name='email' value={fromvalue.email} onChange={getFrom} 
	wrapperClass='mb-4' label='Email address' id='formControlLg' type='email' size="lg" />
)



// Admin header chnage by login to logout proceess
const redirect = useNavigate();

    // Delete Session 
    const logout = ()=>{
        localStorage.removeItem("userid");
        localStorage.removeItem("uname");
        console.log("Logout successfully")
        redirect("/Dashboard")
    }


retrun(
 {(
                            // use session jova
                            ()=>{
                                // use session 
                                if(localStorage.getItem('userid'))
                                {
                                    return(
                                        <NavLink to="" className="nav-item nav-link" >hi ...{localStorage.getItem('uname')}</NavLink>
                                    )
                                }
                            }
                        )()}
                        {/* login yes to logout option chanage data */}
                        {(
                            ()=>{
                               if(localStorage.getItem("userid"))
                                {
                                    return(
                                        <>
                                            <Link onClick={logout} className="nav-item nav-link">
                                                Logout
                                            </Link>
                                        </>
                                    );
                                } 
                                else{
                                    return(
                                        <>
                                        <NavLink to="/alogin" className="nav-item nav-link">Alogin</NavLink>
                                        </>
                                    )
                                }
                            }
                        )()}
)

useEffect(()=>{
	if(!localstorge.getitem('aid'))
{
	redirect("/dashboard")		
}
	})






